# name: Create backend Docker image with latest tag on manual trigger

# on:
#   workflow_dispatch:

# jobs:

#   build:

#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v3

#     - name: Build the backend Docker image
#       run: |
#         ls -al
#         IMAGE_TAG="latest"
#         docker build . --file Dockerfile_backend --tag ${{ github.repository }}/backend:$IMAGE_TAG
#         echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV
#       if: github.event_name == 'release' || github.event_name == 'workflow_dispatch'

#     - name: Push the backend Docker image to GHCR
#       if: success() && (github.event_name == 'release' || github.event_name == 'workflow_dispatch')
#       run: |
#         echo ${{ secrets.TOKEN_FOR_ACTIONS }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
#         IMAGE_NAME="ghcr.io/${{ github.repository }}/backend"
#         docker tag ${{ github.repository }}/backend:$IMAGE_TAG $IMAGE_NAME:$IMAGE_TAG
#         docker push $IMAGE_NAME:$IMAGE_TAG

name: Create backend Docker image with latest tag on manual trigger

on:
  workflow_dispatch:

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      with:
        platforms: linux/amd64,linux/arm64

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Create a builder
      run: |
        docker buildx create --use

    - name: Build and push the backend Docker image
      run: |
        IMAGE_TAG="latest"
        IMAGE_NAME="ghcr.io/${{ github.repository }}/backend"

        echo ${{ secrets.TOKEN_FOR_ACTIONS }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
        
        docker buildx build --platform linux/amd64,linux/arm64 --file backend/Dockerfile --tag $IMAGE_NAME:$IMAGE_TAG --push .
        echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV
      if: github.event_name == 'release' || github.event_name == 'workflow_dispatch'